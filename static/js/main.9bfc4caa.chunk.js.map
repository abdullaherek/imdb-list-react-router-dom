{"version":3,"sources":["components/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","props","movie","map","mov","i","className","style","margin","width","textAlign","fullTitle","rank","year","crew","imDbRating","src","image","alt","height","App","useState","movies","setMovies","useEffect","axios","get","then","res","data","catch","error","console","log","path","exact","render","items","fullMovie","to","id","textDecoration","color","renderProps","firstStep","find","bul","match","params","code","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4SAEQ,SAASA,EAAOC,GACpB,OACI,8BACKA,EAAMC,MAAMC,KAAI,SAACC,EAAKC,GACnB,OACI,qBAAeC,UAAU,YAAzB,SACA,sBAAKC,MAAO,CAACC,OAAO,SAAUC,MAAM,OAAQC,UAAU,UAAtD,UACA,oDADA,IACyB,kCAAKN,EAAIO,aAAc,uBAChD,4DAFA,IAE4B,8BAAIP,EAAIQ,KAAR,OAAkB,uBAC9C,oDAHA,KAG+B,kCAAKR,EAAIS,KAAT,OAAmB,uBAClD,2CAJA,IAIqB,kCAAKT,EAAIU,KAAT,OAAmB,uBACxC,mDALA,KAK8B,8BAAIV,EAAIW,WAAR,OAAwB,uBACrD,qBAAKC,IAAKZ,EAAIa,MAAOC,IAAKd,EAAIO,UAAWF,MAAM,QAAQU,OAAO,cAPnDd,QCkDjBe,MAnDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OAPAC,qBAAU,WACRC,IACGC,IAAI,iEACJC,MAAK,SAACC,GAAD,OAASL,EAAU,CAACK,EAAIC,UAC7BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IACLC,QAAQC,IAAIX,GAER,cAAC,IAAD,UACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,IAAD,CACE4B,KAAK,IACLC,OAAK,EACLC,OAAQ,kBACNd,EAAOnB,KAAI,SAACD,EAAOG,GAAR,OACT,qBAAaC,UAAU,mBAAvB,SACGJ,EAAMmC,MAAMlC,KAAI,SAACmC,GAAD,OACf,eAAC,IAAD,CACEC,GAAE,gBAAWD,EAAUE,IACvBlC,UAAU,OACVC,MAAO,CAAEkC,eAAgB,OAAQC,MAAO,SAH1C,UAKE,qBAAKnC,MAAO,CAAEG,UAAW,UAAzB,SACG4B,EAAU3B,YAEb,8BAVIN,SAkBhB,cAAC,IAAD,CACE6B,KAAK,eACLE,OAAQ,SAACO,GACP,IAAMzC,EAAQoB,EAAOnB,KAAI,SAACyC,GAAD,OACvBA,EAAUP,MAAMQ,MACd,SAACC,GAAD,OAASA,EAAIN,KAAOG,EAAYI,MAAMC,OAAOC,WAGjD,OAAO,cAACjD,EAAD,2BAAY2C,GAAZ,IAAyBzC,MAAOA,cCrCpCgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAStB,OACP,cAAC,IAAMuB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9bfc4caa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport  function Movies(props) {\r\n    return (\r\n        <div>\r\n            {props.movie.map((mov, i) => {\r\n                return(\r\n                    <div key = {i} className=\"movie-div\"> \r\n                    <div style={{margin:\"0 auto\", width:\"100%\", textAlign:\"center\"}}>\r\n                    <span> Film Adı: </span> <p> {mov.fullTitle}</p><br></br>\r\n                    <span>IMDB Sırası:  </span> <p>{mov.rank} </p><br></br>\r\n                    <span>Vizyon Tarihi:  </span>  <p> {mov.year} </p><br></br>\r\n                    <span>Ekip:  </span> <p> {mov.crew} </p><br></br>\r\n                    <span>IMDB Rating:   </span>  <p>{mov.imDbRating} </p><br></br>\r\n                     <img src={mov.image} alt={mov.fullTitle} width=\"250px\" height=\"250px\"/>\r\n                     </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import \"./style/styles.scss\"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Movies } from \"./components/Movies\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"https://imdb-api.com/en/API/Top250Movies/pk_5g8ie7oxtyveni2lp\")\n      .then((res) => setMovies([res.data]))\n      .catch((error) => console.log(error));\n  }, []);\nconsole.log(movies);\n  return (\n    <Router>\n      <div className=\"App\"> \n        <Route\n          path=\"/\"\n          exact\n          render={() =>\n            movies.map((movie, i) => (\n              <div key={i} className=\"movies-container\">\n                {movie.items.map((fullMovie) => (\n                  <Link\n                    to={`movie/${fullMovie.id}`}\n                    className=\"link\"\n                    style={{ textDecoration: \"none\", color: \"black\" }}\n                  >\n                    <div style={{ textAlign: \"center\" }}>\n                      {fullMovie.fullTitle}\n                    </div>\n                    <hr></hr>\n                  </Link>\n                ))}\n              </div>\n            ))\n          }\n        />\n\n        <Route\n          path=\"/movie/:code\"\n          render={(renderProps) => {\n            const movie = movies.map((firstStep) =>\n              firstStep.items.find(\n                (bul) => bul.id === renderProps.match.params.code\n              )\n            );\n            return <Movies {...renderProps} movie={movie} />;\n          }}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}